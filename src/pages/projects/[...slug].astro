---
import { getCollection, getEntry, getEntries } from "astro:content";
import Base from "../../layouts/Base.astro";
import PersonLink from "../../components/PersonLink.astro";
import BlogCard from "../../components/BlogCard.astro";

export async function getStaticPaths() {
  const project = await getCollection("project");
  return project.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const pis = entry.data.pis ? await getEntries(entry.data.pis) : null;
const team = entry.data.team ? await getEntries(entry.data.team) : null;
const blogs = await getCollection("blogs");
const blogsForProject = blogs.filter((b) =>
  b.data?.projects?.map((p) => p.slug)?.includes(entry.slug),
);

const { Content } = await entry.render();
---

<Base>
  <section class="wrapper style1">
    <div class="container">
      <div class="row gtr-200">
        <div class="col-3 col-12-narrower">
          <div id="sidebar">
            <section>
              <h3>Summary</h3>
              <p>
                Principal investigator: <br />
                {
                  pis &&
                    pis?.map((pi) => (
                      <code>
                        {
                          // @ts-ignore
                          <PersonLink person={pi} />
                        }
                      </code>
                    ))
                }
              </p>
              <p>Funders: <br /> <code>{entry.data.funders}</code></p>
              <footer></footer>
            </section>

            <section>
              <h3>Quick links</h3>
              <ul class="links">
                <li><a href={entry.data.github}>GitHub repository</a></li>
                <li><a href={entry.data.link}>Web app</a></li>
              </ul>
            </section>

            <section>
              <h3>Team</h3>
              <ul class="links">
                {
                  team?.map((member) => (
                    <li>
                      <a href="">
                        {
                          // @ts-ignore
                          <PersonLink person={member} />
                        }
                      </a>
                    </li>
                  ))
                }
              </ul>
            </section>
          </div>
        </div>

        <div class="col-9 col-12-narrower imp-narrower">
          <div id="content">
            <article>
              <header>
                <h2>{entry.data.name}</h2>
                <p>{entry.data.description}</p>
              </header>
              {
                entry.data.image && (
                  <img src={entry.data.image.url} alt={entry.data.image.alt} />
                )
              }
              <Content />
            </article>
            {
              blogsForProject && blogsForProject.length > 0 && (
                <section>
                  <h2>Blog posts</h2>
                  <ul>
                    {blogsForProject.map((b) => (
                      <BlogCard blogPost={b} />
                    ))}
                  </ul>
                </section>
              )
            }
          </div>
        </div>
      </div>
    </div>
  </section>
</Base>
